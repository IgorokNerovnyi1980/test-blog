{"version":3,"sources":["redux/types.js","constants.js","redux/actions.js","variables.js","components/Item.jsx","components/List.jsx","components/Button.jsx","components/FormPost.jsx","components/NewPost.jsx","pages/Base.jsx","components/Content.jsx","components/FormComment.jsx","components/NewComment.jsx","pages/Post.jsx","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["Type","API","getData","dispatch","a","axios","get","catch","error","result","status","arr","data","type","payload","console","log","handleInputsChange","name","value","str","putNewBody","putNewComment","setFlagPost","bool","putValueFlagPost","setFlagComment","putValueFlagComment","setRedirect","putValueRedirect","variables","WrapLink","styled","NavLink","Wrapper","div","Item","title","body","id","to","List","posts","map","key","button","props","color","Button","label","fnClick","onClick","form","connect","state","val","inputValues","handleInputChange","handleSubmit","obj","post","fnInputChange","e","target","onSubmit","preventDefault","setTimeout","onChange","className","NewPost","Title","h1","mainTitle","isNewPost","isShowFormPost","content","Content","text","handleSubmitComment","postId","comment","NewComment","singlePost","redirect","isShowForm","isShowFormComment","getSinglePost","deleteSinglePost","delete","useParams","useEffect","GlobalStyle","createGlobalStyle","path","exact","render","style","textAlign","marginTop","initialState","reducer","action","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","basename","component","App","document","getElementById"],"mappings":"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","file":"static/js/main.81497f03.chunk.js","sourcesContent":["export const Type = {\n    GET_DATA: 'GET_DATA',\n    GET_POST:'GET_POST',\n    PUT_TITLE: 'PUT_TITLE',\n    PUT_BODY:'PUT_BODY',\n    PUT_COMMENT:'PUT_COMMENT',\n    FLAG_POST:'FLAG_POST',\n    FLAG_COMMENT:'FLAG_COMMENT',\n    REDIRECT:'REDIRECT'\n};","export const API ={\n    URL:'https://simpleblogapi.herokuapp.com/posts',\n    URL_CMT: 'https://simpleblogapi.herokuapp.com/comments'\n};\n","import axios from 'axios';\nimport {Type} from './types';\nimport {API} from '../constants'\n\nfunction putValueRedirect(bool){\n    return {type: Type.REDIRECT, payload: bool};\n};\n\nfunction putValueFlagPost(bool){\n    return {type: Type.FLAG_POST, payload: bool};\n};\n\nfunction putValueFlagComment(bool){\n    return {type: Type.FLAG_COMMENT, payload: bool};\n};\n\nfunction putNewTitle(str){\n    return {type: Type.PUT_TITLE, payload: str};\n};\n\nfunction putNewBody(str){\n    return {type: Type.PUT_BODY, payload: str};\n};\n\nfunction putNewComment(str){\n    return {type: Type.PUT_COMMENT, payload: str};\n};\n\nfunction putPostsInStore(arr) {\n    return {type: Type.GET_DATA, payload: arr};\n};\n\nfunction putSinglePostInStore(obj){\n    return{type:Type.GET_POST, payload:obj}\n}\n\n\n\nexport const getData = function () {\n    \n    return async function (dispatch) {\n        const result = await axios\n            .get(API.URL)\n            .catch(error => {\n                return error;\n            });\n        if (result.status === 200) {\n            dispatch(putPostsInStore(result.data));\n            console.log('get post from Api')\n        };\n\n    };\n};\n\nexport const getSinglePost = function (id) {\n\n    return async function (dispatch) {\n        const result = await axios\n            .get(`${API.URL}/${id}`)\n            .catch(error => {\n                return error;\n            });\n\n        if (result.status === 200) {\n            dispatch(putSinglePostInStore(result.data));\n        }\n\n    };\n};\n\nexport const deleteSinglePost = function (id) {\n\n    return async function (dispatch) {\n        const result = await axios\n            .delete(`${API.URL}/${id}`)\n            .catch(error => {\n                return error;\n            });\n\n        if (result.status === 200) {\n           console.log(`delete post with id:${id}`)\n        }\n\n    };\n};\n\nexport const handleInputsChange = (name, value) => {\n\n    return function (dispatch){\n        switch(name){\n            case 'title':\n                dispatch(putNewTitle(value));\n                break\n               case 'body':\n                dispatch(putNewBody(value));\n                break\n            case 'comment':\n                dispatch(putNewComment(value));\n                break\n            default:\n                return;\n        }\n    }\n   \n    \n};\n\nexport const handleSubmit = (obj) => {\n    return async function () {\n        const result = await axios\n            .post(`${API.URL}`,obj)\n            .catch(error => {\n                return error;\n            });\n\n        if (result.status === 201) {\n            console.log('create new Post');\n            getData();\n        }else{\n            console.log('not created Post')\n        }\n\n    };\n};\n\nexport const handleSubmitComment = (obj) => {\n    console.log(obj);\n    return async function () {\n        const result = await axios\n            .post(`${API.URL_CMT}`,obj)\n            .catch(error => {\n                return error;\n            });\n\n        if (result.status === 201) {\n            console.log('create new Comment');\n            getData();\n        }else{\n            console.log('not created Comment')\n        }\n\n    };\n};\n\n\nexport const setFlagPost = (bool) => {\n    return function (dispatch){\n        dispatch(putValueFlagPost(bool));\n        }\n};\n\nexport const setFlagComment = (bool) => {\n    return function (dispatch){\n        dispatch(putValueFlagComment(bool));\n        }\n};\n\nexport const setRedirect = (bool) => {\n    return function (dispatch){\n        dispatch(putValueRedirect(bool));\n        }\n};\n\n","export const variables = {\n    //backgrounds\n    mainBG: '#4a4b4f',\n    secondaryBG: '#4f69d1',\n    accentBG:'white',\n    //colors\n    titleClr: '#2F4F4F',\n    textClr: 'black',\n    accentClr:'white',\n    hoverClr: 'grey',\n    linkClr: '#a3bad9',\n    secondaryClr: '#4f69d1',\n    //font-sizes\n    h1FZ:'2em',\n    titleFZ: '1.8em',\n    mainFZ: '1em',\n    secondayFZ: '0.8em',\n    accentFZ: '1.3em',\n    //box-shadow\n    headerBoxShadow: '0px 5px 5px 0px rgba(163,186,217,0.25)',\n    boxShadow: '0px 5px 10px 0px rgba(163,186,217,0.25)',\n    // other\n    formatDate: 'MMM Do YY',\n    targetLink: '#',\n    mobileMediaRule: 'max-width:940px',\n    desktopMediaRule: 'min-width:941px',\n    //media\n    mediaW_1: '720px',\n    mediaW_11: '721px',\n    mediaW_2: '940px',\n    mediaW_3: '1200px'\n};","import React from 'react';\nimport styled from 'styled-components';\nimport {NavLink} from 'react-router-dom';\nimport {variables} from '../variables';\n\nconst WrapLink = styled(NavLink)`\n     width:90%;\n     text-decoration:none;\n    \n`;\n\nconst Wrapper = styled.div`\n    margin-top:10px;\n    min-height:30px;\n    border:1px solid ${variables.secondaryBG};\n    border-radius:5px;\n    background-color:${variables.accentBG};\n    display:flex;\n    justify-content:flex-start;\n    align-items:center;\n    cursor:pointer;\n    transition:0.2s ease;\n    :last-child{\n        margin-bottom:10px;\n    }\n    h3{   \n        margin-left:10px;\n        font-size:${variables.titleFZ};\n        font-weight:bold;\n        color:${variables.titleClr};\n    }\n    p{\n        max-width:50%;\n        margin-left:10px;\n        font-size:${variables.mainFZ}; \n        color:${variables.textClr};\n        white-space:nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n    }\n    :active{\n        transform:scale(0.98);\n    }\n`;\n\nconst Item = (\n    {\n        title = 'default',\n        body = '',\n        id= ''\n    }) => {\n    return(\n        <WrapLink to={`/posts/${id}`} >\n            <Wrapper>\n                <h3>{title}</h3>\n                <p>{body}</p>\n            </Wrapper>\n        </WrapLink>\n    )\n};\n\nexport default Item;\n","import React from 'react';\nimport styled from 'styled-components';\nimport {variables} from '../variables';\n//components\nimport Item from './Item';\n\nconst Wrapper = styled.div`\n    width:90%;\n    height:auto;\n    min-height:70vh;\n    overflow:auto;\n    padding-top: 10px;\n    border-radius:5px;\n    background-color:${variables.accentBG};\n    display:flex;\n    flex-direction:column;\n    justify-content:flex-start;\n    align-items:center;\n`;\n\nconst List = (\n    {\n        posts = null\n    }) => {\n\n        return(\n            <Wrapper>\n                {posts ? posts.map(({id, title, body}) =>(\n                    <Item \n                        key={id}\n                        title={title}\n                        body={body}\n                        id={id}\n                    />\n                ))\n                :\n                    <p>Loading...</p>\n                }\n            </Wrapper>\n        )\n};\n\nexport default List;\n","import React from 'react';\nimport styled from 'styled-components';\nimport {variables} from '../variables';\n\nconst Wrapper = styled.button`\n    padding:5px 10px;\n    border:1px solid ${props => props.color};\n    background:none;\n    border-radius:5px;\n    color:${props => props.color};\n    font-size:${variables.mainFZ};\n    font-weight:bold;\n    cursor: pointer;\n    transition: 0.2s;\n    :hover{\n        color:${variables.secondaryClr};\n        border:1px solid ${variables.secondaryBG};\n    }\n    :active{\n        transform:scale(0.95);\n    }\n`;\n\nconst Button = (\n    {\n        label = 'default',\n        fnClick = () => { },\n        type = 'button',\n        color = `${variables.accentClr}`\n    }) => {\n    return(\n        <Wrapper \n            onClick={fnClick}\n            type={type}\n            color={color}\n        >\n            {label}\n        </Wrapper>\n    )\n};\n\nexport default Button;","import React from 'react';\nimport styled from 'styled-components';\nimport {variables} from '../variables';\nimport {connect} from 'react-redux';\nimport {\n    handleInputsChange,\n    handleSubmit,\n    setFlagPost,\n    getData} from '../redux/actions'\n//components\nimport Button from './Button';\n\nconst Wrapper = styled.form`\n    width:90%;\n    min-height:350px;\n    background:none;\n    display:flex;\n    flex-direction:column;\n    justify-content:space-between;\n    align-items:center;\n    input{\n        min-width:200px;\n        min-height:30px;\n        border-radius:5px;\n        padding-left:5px;\n    }\n    textarea{\n        min-width:200px;\n        min-height:180px;\n        border-radius:5px;\n        padding:5px;\n    }\n    label{\n        padding:5px 0;\n        color:${variables.secondaryClr};\n        font-size:${variables.mainFZ};\n    }\n    .btnBox{\n        width:50%;\n        max-width:180px;\n        display:flex;\n        justify-content:space-between;\n        align-items:center;\n    }\n`;\n\nconst FormPost = (\n    {\n        handleInputChange = () => { },\n        handleSubmit = () => { },\n        setFlagPost = () => { },\n        getData = () => { },\n        val = null\n    }) => {\n\n        const fnInputChange = e => {\n            handleInputChange(e.target.name, e.target.value);\n        }\n        \n        const fnSubmit = e => {\n            e.preventDefault();\n            const result = { \n                    title:`${val.title}`,\n                    body: `${val.body}`\n            };\n            handleSubmit(result);\n            handleInputChange('title', '');\n            handleInputChange('body', '');\n            setFlagPost(false);\n            setTimeout( () => getData(), 1000)\n            \n        }\n\n        const fnCancel = () => {\n            setFlagPost(false);\n        }\n\n    return(\n        <Wrapper onSubmit={fnSubmit}>\n            <label>title</label>\n            <input name='title' onChange={fnInputChange} value={val.title || ''}/>\n            <label>text</label>\n            <textarea name='body' onChange={fnInputChange} value={val.body || ''}/>\n            <div className=\"btnBox\">\n                <Button type='submit' label='Post'/>\n                <Button label='Cancel' fnClick={fnCancel} />\n            </div>\n        </Wrapper>\n    )\n\n};\n\nconst STP = state => (\n    {\n      val: state.inputValues,\n    }\n);\n\nconst DTP = dispatch => ({\n    handleInputChange: (name, value) => dispatch(handleInputsChange(name, value)),\n    handleSubmit: (obj) => dispatch(handleSubmit(obj)),\n    setFlagPost: (bool) => dispatch(setFlagPost(bool)),\n    getData: () => dispatch(getData())\n});\n\nexport default connect(STP, DTP,)(FormPost);\n","import React from 'react';\nimport styled from 'styled-components';\nimport {variables} from '../variables';\nimport FormPost from './FormPost';\n\nconst Wrapper = styled.div`\n    position:fixed;\n    top:0;\n    left:0;\n    width:100%;\n    height:100%;\n    padding-top: 10px;\n    border-radius:5px;\n    background-color:${variables.mainBG};\n    display:flex;\n    justify-content:center;\n    align-items:center;\n   \n`;\n\nconst NewPost = () => {\n\n    return(\n        <Wrapper>\n            <FormPost />\n        </Wrapper>\n    )\n\n};\n\nexport default NewPost;\n","import React from 'react';\nimport styled from 'styled-components';\nimport {variables} from '../variables';\nimport {connect} from 'react-redux';\nimport {setFlagPost} from '../redux/actions';\n//components\nimport List from '../components/List';\nimport Button from '../components/Button';\nimport NewPost from '../components/NewPost';\n\nconst Wrapper = styled.div`\n    width:100%;\n    min-width:100vw;\n    height:100%;\n    min-height:100vh;\n    background-color:${variables.mainBG};\n    display:flex;\n    flex-direction:column;\n    justify-content:space-evenly;\n    align-items:center;\n`;\nconst Title = styled.h1`\n    color:${variables.accentClr};\n    font-size:${variables.h1FZ};\n`;\n\nconst Base = (\n    {\n        content = null,\n        mainTitle = 'default',\n        setFlagPost = () => { },\n        isNewPost = false\n    }) => {\n\n        const createNewPost = () => {\n            setFlagPost(true);\n        }\n\n    return(\n        \n        <Wrapper>\n            <Title>{mainTitle}</Title>\n           <List posts={content} />\n           <Button\n                label='Add Article'\n                fnClick={createNewPost}\n            />\n            {isNewPost && <NewPost /> }\n        </Wrapper>\n    )\n};\nconst STP = state => (\n    {\n        mainTitle: state.mainTitle,\n        isNewPost: state.isShowFormPost,\n    }\n);\n\nconst DTP = dispatch => ({\n    setFlagPost: (bool) => dispatch(setFlagPost(bool)),\n});\n\nexport default connect(STP, DTP)(Base);","import React from 'react';\nimport styled from 'styled-components';\nimport {variables} from '../variables';\n\nconst Wrapper = styled.div`\n    width:90%;\n    height:auto;\n    min-height:70vh;\n    padding-top: 10px;\n    border-radius:5px;\n    background-color:${variables.accentBG};\n    display:flex;\n    flex-direction:column;\n    justify-content:flex-start;\n    align-items:center;\n    h1{   \n        margin-left:10px;\n        font-size:${variables.titleFZ};\n        font-weight:bold;\n        color:${variables.titleClr};\n    }\n    p{\n        max-width:80%;\n        margin-left:10px;\n        font-size:${variables.mainFZ}; \n        color:${variables.textClr};\n    }\n`;\n\nconst Content = (\n    {\n        title = '',\n        text = '',\n    }) => {\n\n    return(\n        <Wrapper>\n            <h1>{title}</h1>\n            <p>{text}</p>\n        </Wrapper>\n    )\n\n};\n\nexport default Content;\n","import React from 'react';\nimport styled from 'styled-components';\nimport {variables} from '../variables';\nimport {connect} from 'react-redux';\nimport {\n    handleInputsChange,\n    handleSubmitComment,\n    setFlagComment,\n    getData} from '../redux/actions'\n//components\nimport Button from './Button';\n\nconst Wrapper = styled.form`\n    width:90%;\n    min-height:150px;\n    background:none;\n    display:flex;\n    flex-direction:column;\n    justify-content:space-around;\n    align-items:center;\n    textarea{\n        min-width:95%;\n        min-height:100px;\n        border-radius:5px;\n        padding:5px;\n    }    \n    .btnBox{\n        width:20%;\n        min-width:50px;\n        max-width:180px;\n        display:flex;\n        justify-content:space-between;\n        align-items:center;\n    }\n`;\n\nconst FormComment = (\n    {\n        handleInputChange = () => { },\n        handleSubmitComment = () => { },\n        setFlagComment = () => { },\n        getData = () => { },\n        val = null,\n        id = null\n    }) => {\n\n        const fnInputChange = e => {\n            handleInputChange(e.target.name, e.target.value);\n        }\n        \n        const fnSubmit = e => {\n            e.preventDefault();\n            const result = { \n                    postId:`${id}`,\n                    body: `${val.comment}`\n            };\n            handleSubmitComment(result);\n            handleInputChange('comment', '');\n            setFlagComment(false);\n            setTimeout( () => getData(), 1000)\n            \n        }\n\n        const fnCancel = () => {\n            setFlagComment(false);\n        }\n\n    return(\n        <Wrapper onSubmit={fnSubmit}>     \n             <textarea name='comment' onChange={fnInputChange} value={val.comment || ''}/>\n            <div className=\"btnBox\">\n                <Button type='submit' label='Post'/>\n                <Button label='Cancel' fnClick={fnCancel} />\n            </div>\n        </Wrapper>\n    )\n\n};\n\nconst STP = state => (\n    {\n      val: state.inputValues,\n    }\n);\n\nconst DTP = dispatch => ({\n    handleInputChange: (name, value) => dispatch(handleInputsChange(name, value)),\n    handleSubmitComment: (obj, id) => dispatch(handleSubmitComment(obj,id)),\n    setFlagComment: (bool) => dispatch(setFlagComment(bool)),\n    getData: () => dispatch(getData())\n});\n\nexport default connect(STP, DTP,)(FormComment);\n","import React from 'react';\nimport styled from 'styled-components';\nimport {variables} from '../variables';\nimport Form from './FormComment';\n\nconst Wrapper = styled.div`\n    position:fixed;\n    top:85%;\n    left:50%;\n    transform:translate(-50%, -50%);\n    width:91%;\n    height:150px;\n    border-radius:5px;\n    background-color:${variables.mainBG};\n    display:flex;\n    justify-content:center;\n    align-items:center;\n   \n`;\n\nconst NewComment = ({id = null}) => {\n\n    return(\n        <Wrapper>\n            <Form id={id} />\n        </Wrapper>\n    )\n\n};\n\nexport default NewComment;\n","import React,{useEffect} from 'react';\nimport {useParams} from \"react-router-dom\";\nimport styled from 'styled-components';\nimport {variables} from '../variables';\nimport {NavLink, Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {\n    getSinglePost,\n    deleteSinglePost,\n    setRedirect,\n    getData,\n    setFlagComment} from '../redux/actions';\n//components\nimport Content from '../components/Content';\nimport Button from '../components/Button';\nimport NewComment from '../components/NewComment';\n\nconst Wrapper = styled.div`\n    width:100vw;\n    height:100vh;\n    background-color:${variables.mainBG};\n    display:flex;\n    flex-direction:column;\n    justify-content:space-evenly;\n    align-items:center;\n    .btnBox{\n        min-width:250px;\n        display:flex;\n        justify-content:space-between;\n        align-items:center;\n    }\n`;\n\nconst Title = styled.h1`\n    color:${variables.accentClr};\n    font-size:${variables.h1FZ};\n`;\n\nconst WrapLink = styled(NavLink)`\n     text-decoration:none; \n`;\n\nconst Post = (\n    {\n        getSinglePost = () => { },\n        deleteSinglePost = () => { },\n        setRedirect = () => { },\n        getData = () => { },\n        setFlagComment = () => { },\n        singlePost = null,\n        redirect = false,\n        isShowForm = false,\n\n    }) => {\n    const { id } = useParams();\n\n    useEffect(() => {\n        getSinglePost(id);\n    },[]);//eslint-disable-line\n\n    const handleDelete = () => {\n        deleteSinglePost(id);\n        setRedirect(true);\n        setTimeout( () => getData(), 1000)\n        setTimeout( () => setRedirect(false), 1000)\n    };\n\n    const createNewComment = () => {\n        console.log('wer')\n        setFlagComment(true);\n    }\n\n        return(\n            redirect \n            ? \n            <Redirect to='/posts'/>\n            :\n            <Wrapper>\n            <WrapLink to='/posts'>\n                <Title>To main Page</Title>\n            </WrapLink>\n            {isShowForm ? <NewComment id={id} /> : null}\n            \n            {singlePost && \n            <Content\n                title={singlePost.title}\n                text={singlePost.body}\n            />}\n            <div className=\"btnBox\">\n                <Button\n                    label='Add Comment'\n                    fnClick={createNewComment}\n                />\n\n                <Button\n                    label='Delete Post'\n                    color='red'\n                    fnClick={handleDelete}\n                />\n            </div>\n             \n            \n        </Wrapper>\n        )\n};\n\nconst STP = state => (\n    {\n      singlePost:state.singlePost,\n      redirect:state.redirect,\n      isShowForm:state.isShowFormComment\n    }\n);\n\nconst DTP = dispatch => ({\n    getSinglePost : (id) => dispatch(getSinglePost(id)),\n    deleteSinglePost: (id) => dispatch(deleteSinglePost(id)),\n    setRedirect: (bool) => dispatch(setRedirect(bool)),\n    getData: () => dispatch(getData()),\n    setFlagComment: (bool) => dispatch(setFlagComment(bool)),\n});\n\nexport default connect(STP, DTP,)(Post);\n","import React, {useEffect} from 'react';\nimport {createGlobalStyle} from 'styled-components';\nimport {Route, Switch} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {getData} from './redux/actions';\n//pages\nimport Base from './pages/Base';\nimport Post from './pages/Post';\n\n\nconst GlobalStyle = createGlobalStyle `\n  * {\n    box-sizing: border-box;\n  }\n\n  *:after, *:before {\n    box-sizing: inherit;\n  }\n\n  p, ul, li, h1, h2, h3, h4 ,h5 ,h6, html, body{\n    margin: 0;\n    padding: 0;\n  }\n  h1, h2, h3, h4,h5, h6{\n    font-weight: normal;\n  }\n\n  input, textarea, button{\n    outline: none;\n    border:none;\n  }\n\n  body{\n    font-family: 'Helvetica', sans-serif;\n    font-size: 14px;\n    color: #000000;\n    font-weight: 400;\n    min-width: 320px;\n    overflow-x: hidden;\n    background: #ffffff;\n    line-height: normal;\n  }\n\n  @media (min-width: 1921px) {\n  body {\n    font-size: 16px;\n  }\n}\n`;\n\nfunction App(\n  {\n    getData = () => { },\n    posts = [],\n\n  }) {\n\n   useEffect(() => {\n    getData();\n   },[]); //eslint-disable-line\n\n    return (\n        <> \n          < GlobalStyle /> \n          <Switch>\n            <Route\n                  path='/'\n                  exact\n                  render={props => <Base {...{...props, content:posts}}/>\n                  }\n              />\n               <Route\n                  path='/posts/:id'\n                  render={props => <Post {...props} />\n                  }\n                />\n              <Route\n                  path='/posts'\n                  render={props => <Base {...{...props, content:posts}}/>\n                  }\n              />\n              \n            <Route render={() => <h3 style={{textAlign:'center', marginTop:'200px'}}>Not found</h3>}/>\n          </Switch>\n        </>\n    );\n}\n\nconst STP = state => (\n    {\n      posts: state.posts,\n    }\n);\n\nconst DTP = dispatch => ({\n    getData: () => dispatch(getData()),\n})\n\nexport default connect(STP, DTP,)(App);\n","import {Type} from './types';\n\nconst initialState = {\n    posts: null,\n    mainTitle: 'Hi! this actuality blog!',\n    singlePost:null,\n    inputValues:{\n        title:'',\n        body:'',\n        comment:''\n    },\n    isShowFormPost: false,\n    isShowFormComment: false,\n    redirect:false,\n\n};\n\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case Type.GET_DATA:\n            return { \n                ...state,\n                posts: action.payload\n            };\n        case Type.GET_POST:\n            return { \n                ...state,\n                singlePost: action.payload\n            };\n\n        case Type.PUT_TITLE:\n            return { \n                ...state,\n                inputValues: {...state.inputValues, title:action.payload}\n            };\n        case Type.PUT_BODY:\n            return { \n                ...state,\n                inputValues: {...state.inputValues, body:action.payload}\n            };\n        case Type.PUT_COMMENT:\n            return { \n                ...state,\n                inputValues: {...state.inputValues, comment:action.payload}\n            };\n            \n        case Type.FLAG_POST:\n            return { \n                ...state,\n                isShowFormPost: action.payload\n            }; \n        case Type.FLAG_COMMENT:\n            return { \n                ...state,\n                isShowFormComment: action.payload\n            }; \n        case Type.REDIRECT:\n            return { \n                ...state,\n                redirect: action.payload\n            };\n        default:\n            return state;\n    }\n};\nexport default reducer;","import {createStore, applyMiddleware} from 'redux';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport rootReducer from './reducer';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(\n    rootReducer,\n    composeWithDevTools(applyMiddleware(thunk)),\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {HashRouter, Route} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <HashRouter basename=\"/\">\n            <Route component={App}/>\n        </HashRouter>\n    </Provider>,\n    document.getElementById(\n        'root'\n    )\n);\n"],"sourceRoot":""}